include details

mixin playerName(participant) 
	span.name&attributes(attributes) #{participant.player.getName()}	

mixin playerShip(participant)
	- 
		let team;
		if (allies.some(ally => ally.player?.getName() === participant.player.getName()))
			team = "ally";
		else if (enemies.some(enemy => enemy.player?.getName() === participant.player.getName()))
			team = "enemy";
	span.ship&attributes(attributes)
		if team === "ally"
			img(src=`img/icon_${participant.ship.getClass().toLowerCase()}.png`)
			| &nbsp;
		| #{participant.ship.getLabel()}
		if team === "enemy"
			| &nbsp;
			img(src=`img/icon_${participant.ship.getClass().toLowerCase()}_mirrored.png`)


- 
	const rows = Math.max(allies.length, enemies.length);
	const primary = options?.primary === "ship" ? 'playerShip' : 'playerName';
	const secondary = options?.primary === "ship" ? 'playerName' : 'playerShip';
- 
	function winrateClass(wr) {
		wr *= 100;
		if (0 < wr && wr < 45)
			return 'bad';
		else if (45 <= wr && wr < 49)
			return 'belowaverage';
		else if (49 <= wr && wr < 52)			
			return 'average';
		else if (52 <= wr  && wr < 54)
			return 'good';
		else if (54 <= wr && wr < 56)
			return 'verygood';
		else if (56 <= wr && wr < 60)
			return 'great';
		else if (60 <= wr && wr < 65)
			return 'unicum';
		else if (65 <= wr)
			return 'superunicum';
	}
div
	table
		colgroup
			col.ally.name
			col.ally.winrate
			col.enemy.winrate
			col.enemy.name
		- for (let i = 0; i < rows; i++) {
			- const ally = allies[i];
			- const enemy = enemies[i];
			tr
				if ally.player
					td.ally(class=ally.player.getName() === player.name ? 'player' : '', 
						class=ally.ship.getClass().toLowerCase(),
						data-details=ally.player.getName())
						//- +#{}: Dynamically determine mixin name and call it
						+#{primary}(ally).primary
						br
						//- +#{}: Dynamically determine mixin name and call it
						+#{secondary}(ally).secondary
					td(data-details=ally.player.getName())
						if ally.player.isBot()
							span.notification Bot
						else if ally.player.isHidden()
							span.notification private
						else
							span.winrate(class=winrateClass(ally.player.getWinrate())) 
								| #{(100 * ally.player.getWinrate()).toFixed(1)} 
								span.unit %
							br
							span.battles 
								| #{ally.player.getBattles()} 
								span.unit battles
							aside.details.ally(
								class=ally.player.getName() === player.name ? 'player' : '', 
								data-details-for=ally.player.getName())
								+details(ally)
				else
					- console.error(`No result for ally #${ally.name}`);
					td(colspan=2, style='font-size: 75%; color: red; white-space: normal;')
						| There was an error getting data for ally #{ally.name}
				if enemy.player
					td(data-details=enemy.player.getName())
						if enemy.player.isBot()
							span.notification Bot
						else if enemy.player.isHidden()
							span.notification private
						else
							span.winrate(class=winrateClass(enemy.player.getWinrate()))
								| #{(100 * enemy.player.getWinrate()).toFixed(1)}
								span.unit %
							br
							span.battles 
								| #{enemy.player.getBattles()} 
								span.unit battles
							aside.details.enemy(data-details-for=enemy.player.getName())
								+details(enemy)
					td.enemy(class=enemy.ship.getClass().toLowerCase(), 
						data-details=enemy.player.getName())
						//- +#{}: Dynamically determine mixin name and call it
						+#{primary}(enemy).primary
						br
						//- +#{}: Dynamically determine mixin name and call it
						+#{secondary}(enemy).secondary
				else
					- console.error(`No result for enemy #${enemy.name}`);
					td(colspan=2, style='font-size: 75%; color: red; white-space: normal;')
						| There was an error getting data for enemy #{enemy.name}
		- }		