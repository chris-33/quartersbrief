- 
	const maxDistance = 6500;
	const reduction = 2500;
	function length(range) {
		return (range - reduction) * 100/(maxDistance - reduction);
	}
if ships.length > 0
	svg(version="1.1", xmlns="http://www.w3.org/2000/svg", viewbox="-100 -100 200 200")
		g.axis
			line(x1=length(3000) y1="0" x2="100" y2="0")
			each range in [3000, 4000, 5000, 6000]
				line(x1=length(range) y1="-2" x2=length(range) y2="+2")
				text(x=length(range) y="3") #{range / 1000}km
		each range in Object.keys(hydros)
			circle.hydro(r=length(range))
	each range in Object.keys(hydros)
		div.label(style=`left: ${(100 + Math.cos(1/4 * Math.PI) * length(range)) / 2}%; top: ${(100 - Math.sin(1/4 * Math.PI) * length(range)) / 2}%`)
			each hydro in hydros[range]
				span.ship(class={
					"ally": teams.allies.includes(hydro.ship.getID()),
					"enemy": teams.enemies.includes(hydro.ship.getID())
				}, data-details=hydro.ship.getName()) #{hydro.ship.getLabel()}
				br
				aside.details(class={
					ally: teams.allies.includes(hydro.ship.getID()),
					enemy: teams.enemies.includes(hydro.ship.getID())
				}, data-details-for=hydro.ship.getName())
					include details
	script
		include layout.js
		| (function layout() {
		| 	const labels = Array.from(document.currentScript.parentElement.querySelectorAll('.label'));
		| 	let bounds = window.getComputedStyle(document.currentScript.parentElement);
		|	bounds = DOMRect.fromRect({
		|		x: Number.parseFloat(bounds.left) + Number.parseFloat(bounds.width) / 2,
		|		y: Number.parseFloat(bounds.top),
		|		width: Number.parseFloat(bounds.width) / 2,
		|		height: Number.parseFloat(bounds.height) / 2
		|	});
		| 	layoutLabels(labels, bounds);
		| })();

else
	.no-hydros
		| There are no ships with hydroacoustic search in this battle.