@use '../colors';
@use '../fontsizes';
@use 'sass:selector';
@use 'details';

$unit-light: #e8e8e8;

.content {
	display: grid;
	align-items: center;
	grid-template-columns: minmax(5ch, 15ch) 3fr;
	row-gap: 2ex;

	& > * {
		min-width: 0;
	}
}

.ship {	
	display: contents;

	.label {
		white-space: nowrap;
		overflow-x: hidden;
		text-overflow: ellipsis;
		padding-right: 0.5ch;
		min-width: 8ch;
		max-width: 15ch;
	}

	.diagram {
		white-space: nowrap;
		display: flex;
		align-items: center;
	}

	.warnings {
		display: flex;
		justify-content: space-between;
		margin-right: 3em;
		margin-top: 0.5ex;

		cursor: default;

		font-family: "dripicons-v2";
		font-size: fontsizes.$small;

		color: colors.$minor;
		.moderate {
			color: colors.$warning-moderate;
		}
		.severe {
			color: colors.$warning-severe;
		}
	}
}

.shipbar {
	@include colors.teamcolor-background;

	$vertical-padding: 2pt;

	padding: $vertical-padding 0;
	color: white;
	display: flex;
	// Layout in reverse row direction to make sure the range is always right-aligned, even if both tubes and speed effect are hidden
	flex-direction: row-reverse;
	justify-content: space-between;
	align-items: center;

	flex: 0 0 auto;

	.tubes {
		margin-left: 0.25ch;
	}

	.range {
		// Prevent range from being covered by the explosion circle
		z-index: 1;
	}

	.speed {
		text-align: center;	
		color: black;
		font-size: fontsizes.$small;	
		align-self: stretch;
		margin: -$vertical-padding 0;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.hidden {
		display: none;
	}
}

.explosion {
	flex: 0 0 auto;
	// Make the height match the width:
	// Currently commented out because the old chromium version (79) of the Steam overlay can't understand this
	// aspect-ratio: 1/1;
	// Make it a circle:
	border-radius: 50%;		
	// Move center to range bar's end:
	transform: translateX(-50%);
	color: white;
	text-align: center;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;

	@include colors.teamcolor-background;
	// Override style so it doesn't get the gradient applied as well.
	.enemy.ally & {
		background: colors.$enemy;
	}
}

// Make the units on range and damage (but not speed) a lighter color for allies and enemies, but not the player
#{selector.nest('.ally, .enemy', '&:not(.player)', '.range, .explosion', '.unit')} {
	color: $unit-light;	
}
.player {
	// Always make the player's ship come last
	order: 20;
}

