extends ../armortopic

block content
	-
		const CA_CALIBER_THRESHOLD = options?.caCaliber ?? 200;

		function penned(piece, id) {
			const thickness = ownship.get(`hull.armor.${id}`);
			const crudes = Object.values(pens).filter(pen => pen.ship.getClass() === 'Cruiser' || pen.ship.getClass() === 'Destroyer');
			debugger
			// Penned by all cruisers and destroyers
			if (crudes.every(pen => pen.ammos.he >= thickness || pen.ammos.sap >= thickness))
				return 'all';
			// Penned by some CL/DD without IFHE
			if (crudes.some(pen => pen.caliber < CA_CALIBER_THRESHOLD && (pen.ammos.he >= thickness || pen.ammos.sap >= thickness)))
				return 'cl';
			// Penned by some CA and/or some CL/DD but only with IFHE
			if (crudes.some(pen => (pen.caliber < CA_CALIBER_THRESHOLD && pen.ammos.ifhe >= thickness) || (pen.caliber >= CA_CALIBER_THRESHOLD && pen.ammos.he >= thickness)))
				return 'ca';
			// Penned only by guns CA with IFHE and bigger
			return 'none';
		}

	each view in [ 'side', 'top' ]
		.view
			h3 #{view[0].toUpperCase() + view.slice(1)} view:

			+armorview(armor[view], penned)

	include legend

	include penlist

	//- Convert piece IDs into a set and back into an array to remove duplicate.
	//- Duplicates will cause an error when the topic is received, and we can't just use a set directly because pug doesn't know how to iterate over them
	- const uniqueIDs = Array.from(new Set([ ...Object.keys(armor.side), ...Object.keys(armor.top) ]))
	each id in uniqueIDs
		- const thickness = ownship.get(`hull.armor.${id}`);
		include details	