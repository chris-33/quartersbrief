extends ../armortopic

block content
	- 
		const shipsByClass = {
			battleships: ships.filter(ship => ship.class === 'Battleship'),
			cruisers: ships.filter(ship => ship.class === 'Cruiser'),
			destroyers: ships.filter(ship => ship.class === 'Destroyer')
		};

		function overmatched(piece, id) {
			const thickness = ownship.get(`hull.armor.${id}`);
			if (shipsByClass.battleships.every(battleship => battleship.artillery.caliber >= Math.ceil(thickness * 14.3)))
				return 'all';
			else if (shipsByClass.battleships.some(battleship => battleship.artillery.caliber >= Math.ceil(thickness * 14.3)))
				return 'some';
			else 
				return 'none';
		}

	+armorview(armor.side, overmatched)

	.legend
		| Overmatched by:
		ul
			li.all all battleships
			li.some some battleships
			li.none no battleships

	.gunlist
		- const show = options?.filter?.classes?.map(cls => `${cls.toLowerCase()}s`);
		each ships, cls in shipsByClass		
			//- Do not show ship classes that were excluded through filter
			//- Otherwise, they will show the heading, but then say there are none
			if !show || show.includes(cls)
				div(class=cls.slice(0, -1).toLowerCase())
					h4 #{cls[0].toUpperCase() + cls.slice(1)}
					table
						each ship in ships
							tr
								td.label #{ship.label}
								td.value #{ship.artillery.caliber}
									span.unit mm
						else
							.message(class=cls.slice(0, -1)) There are no #{cls} in this battle

	each piece, id in armor.side
		- const thickness = ownship.get(`hull.armor.${id}`);
		include details